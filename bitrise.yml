format_version: 5
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  - BITRISE_STEP_ID: appetize-deploy
  - BITRISE_STEP_VERSION: "0.9.1"
  - BITRISE_STEP_GIT_CLONE_URL: https://github.com/bitrise-steplib/steps-appetize-io-deploy.git
  - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL

  - VERBOSE: false
  - ORIGIN_SOURCE_DIR: $BITRISE_SOURCE_DIR

  - SAMPLE_APP_URL: https://github.com/BirmacherAkos/sample-artifacts.git

workflows:
  test:
    before_run:
    - audit-this-step
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    after_run:
    - iOS_test
    - iOS_zipped_test
    - iOS_gz_test
    - android_test
    - public_key_test

  _clear_workdir:
    envs:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ${ORIGIN_SOURCE_DIR}
            rm -rf "./_tmp"
            mkdir "_tmp"
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ${ORIGIN_SOURCE_DIR}/_tmp
        - is_create_path: true
    
  iOS_zipped_test:
    before_run:
    - _clear_workdir
    steps:
    - script:
        title: Clone sample app
        inputs:
        - content: git clone -b developer $SAMPLE_APP_URL . && cd
    - script:
        title: Zip sample app
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            cd apps/
            zip -r XcodeArchiveTest.app.zip XcodeArchiveTest.app

            cd ../
    - path::./:
        title: iOS .zip Test
        description: |-
          The example input has a default value,
          you can overwrite it if you want to, just like we did below,
          but the step would use the default value specified in the `step.yml`
          file if you would not specify another value.
        inputs:
        - app_path: ./apps/XcodeArchiveTest.app.zip
        - appetize_token: ${TOKEN}
        run_if: true
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ -z "$APPETIZE_APP_URL" ] ; then
              echo " [!] Missing: APPETIZE_APP_URL"
              exit 1
            else
              echo "-> APPETIZE_APP_URL: $APPETIZE_APP_URL"
            fi

  iOS_test:
    before_run:
    - _clear_workdir
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ..
            rm -rf "./_tmp"
            envman add --key BITRISE_SOURCE_DIR --value $(pwd)
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: Clone sample app
        inputs:
        - content: git clone -b developer $SAMPLE_APP_URL .
    - path::./:
        title: iOS Test
        description: |-
          The example input has a default value,
          you can overwrite it if you want to, just like we did below,
          but the step would use the default value specified in the `step.yml`
          file if you would not specify another value.
        inputs:
        - app_path: ./apps/XcodeArchiveTest.app
        - appetize_token: ${TOKEN}
        run_if: true
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ -z "$APPETIZE_APP_URL" ] ; then
              echo " [!] Missing: APPETIZE_APP_URL"
              exit 1
            else
              echo "-> APPETIZE_APP_URL: $APPETIZE_APP_URL"
            fi

  iOS_gz_test:
    before_run:
    - _clear_workdir
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ..
            rm -rf "./_tmp"
            envman add --key BITRISE_SOURCE_DIR --value $(pwd)
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: Clone sample app
        inputs:
        - content: git clone -b developer $SAMPLE_APP_URL .
    - script:
        title: GZip sample app
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            cd apps/
            tar -cvzf XcodeArchiveTest.tar.gz XcodeArchiveTest.app

            cd ../
    - path::./:
        title: iOS .tar.gz Test
        description: |-
          The example input has a default value,
          you can overwrite it if you want to, just like we did below,
          but the step would use the default value specified in the `step.yml`
          file if you would not specify another value.
        inputs:
        - app_path: ./apps/XcodeArchiveTest.tar.gz
        - platform: ios
        - appetize_token: ${TOKEN}
        run_if: true
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ -z "$APPETIZE_APP_URL" ] ; then
              echo " [!] Missing: APPETIZE_APP_URL"
              exit 1
            else
              echo "-> APPETIZE_APP_URL: $APPETIZE_APP_URL"
            fi

  android_test:
    before_run:
    - _clear_workdir
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ..
            rm -rf "./_tmp"
            envman add --key BITRISE_SOURCE_DIR --value $(pwd)
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: Clone sample app
        inputs:
        - content: git clone -b developer $SAMPLE_APP_URL .
    - path::./:
        title: Android Test
        description: |-
          The example input has a default value,
          you can overwrite it if you want to, just like we did below,
          but the step would use the default value specified in the `step.yml`
          file if you would not specify another value.
        inputs:
        - app_path: ./apps/Android.apk
        - platform: android
        - appetize_token: ${TOKEN}
        run_if: true
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ -z "$APPETIZE_APP_URL" ] ; then
              echo " [!] Missing: APPETIZE_APP_URL"
              exit 1
            else
              echo "-> APPETIZE_APP_URL: $APPETIZE_APP_URL"
            fi

  public_key_test:
    before_run:
    - _clear_workdir
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            cd ..
            rm -rf "./_tmp"
            envman add --key BITRISE_SOURCE_DIR --value $(pwd)
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: true
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script:
        title: Clone sample app
        inputs:
        - content: git clone -b developer $SAMPLE_APP_URL .
    - path::./:
        title: Public key Test
        description: |-
          The example input has a default value,
          you can overwrite it if you want to, just like we did below,
          but the step would use the default value specified in the `step.yml`
          file if you would not specify another value.
        inputs:
        - app_path: ./apps/Android.apk
        - platform: android
        - appetize_token: ${TOKEN}
        - public_key: renbn24wbwhm45a21gwd9krgmm
        run_if: true
    - script:
        title: Output check
        inputs:
        - content: |-
            #!/bin/bash
            set -e
            if [ -z "$APPETIZE_APP_URL" ] ; then
              echo " [!] Missing: APPETIZE_APP_URL"
              exit 1
            else
              echo "-> APPETIZE_APP_URL: $APPETIZE_APP_URL"
            fi

  # ----------------------------------------------------------------
  # --- Utility workflows

  dep-update:
    title: Dep update
    description: |
      Used for updating bitrise dependencies with dep
    steps:
    - script:
        title: Dependency update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go get -u -v github.com/golang/dep/cmd/dep
            dep ensure -v
            dep ensure -v -update
            
  # ----------------------------------------------------------------
  # --- workflows to Share this step into a Step Library
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
